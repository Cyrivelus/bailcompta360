<?php
session_start();

// Check user authentication and authorization
if (!isset($_SESSION['user_id']) || !isset($_SESSION['user_role'])) {
    header('Location: ../../login.php');
    exit;
}

require_once '../../templates/header.php';
require_once '../../templates/navigation.php';
require_once '../../fonctions/database.php';
require_once '../../fonctions/gestion_logs.php'; // For logging

$titre = 'Grand Livre des Comptes';
$pdo = getPDO();

$message = '';
$messageType = '';

// Default filter values
$selectedCompteId = $_POST['id_compte'] ?? null;
$startDate = $_POST['start_date'] ?? date('Y-01-01'); // Default to start of current year
$endDate = $_POST['end_date'] ?? date('Y-12-31');     // Default to end of current year

// Get list of all Accounts for filter dropdown
$comptes = [];
try {
    $stmt = $pdo->query("SELECT ID_Compte, Numero_Compte, Nom_Compte, Type_Compte FROM Comptes_compta ORDER BY Numero_Compte ASC");
    $comptes = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    logApplicationError("Erreur PDO lors de la récupération des comptes comptables: " . $e->getMessage());
    $message = "Erreur lors du chargement des comptes. Impossible d'afficher le grand livre.";
    $messageType = 'danger';
}

$accountTransactions = [];
$initialBalance = 0;
$runningBalance = 0;
$selectedAccountDetails = null;

// Only attempt to fetch data if a account is selected and form submitted
if (isset($_POST['generate_report']) && $selectedCompteId) {
    // Find details of the selected account
    foreach ($comptes as $compte) {
        if ($compte['ID_Compte'] == $selectedCompteId) {
            $selectedAccountDetails = $compte;
            break;
        }
    }

    if (!$selectedAccountDetails) {
        $message = "Compte sélectionné introuvable.";
        $messageType = 'danger';
    } elseif (!DateTime::createFromFormat('Y-m-d', $startDate) || !DateTime::createFromFormat('Y-m-d', $endDate)) {
        $message = "Veuillez saisir des dates valides (AAAA-MM-JJ).";
        $messageType = 'danger';
    } elseif ($startDate > $endDate) {
        $message = "La date de début ne peut pas être postérieure à la date de fin.";
        $messageType = 'danger';
    } else {
        try {
            // 1. Calculate Initial Balance (Balance before start_date)
            // Initial balance rules depend on account type.
            // Assets & Expenses: Debits increase, Credits decrease. Initial balance is Sum(Debits) - Sum(Credits)
            // Liabilities, Equity & Revenues: Credits increase, Debits decrease. Initial balance is Sum(Credits) - Sum(Debits)
            $stmtInitialBalance = $pdo->prepare("
                SELECT
                    SUM(CASE WHEN le.Sens = 'D' THEN le.Montant ELSE 0 END) AS Total_Debit,
                    SUM(CASE WHEN le.Sens = 'C' THEN le.Montant ELSE 0 END) AS Total_Credit
                FROM
                    Lignes_Ecritures le
                JOIN
                    Ecritures e ON le.ID_Ecriture = e.ID_Ecriture
                WHERE
                    le.ID_Compte = :id_compte
                    AND e.Date_Saisie < :start_date;
            ");
            $stmtInitialBalance->bindParam(':id_compte', $selectedCompteId, PDO::PARAM_INT);
            $stmtInitialBalance->bindParam(':start_date', $startDate);
            $stmtInitialBalance->execute();
            $balanceData = $stmtInitialBalance->fetch(PDO::FETCH_ASSOC);

            $debitBefore = $balanceData['Total_Debit'] ?? 0;
            $creditBefore = $balanceData['Total_Credit'] ?? 0;

            // Determine initial balance direction based on typical account types
            // This is a simplification; a full chart of accounts with normal balance would be better
            $accountNormalBalance = 'Debit'; // Default for Assets, Expenses
            if (in_array($selectedAccountDetails['Type_Compte'], ['Passif', 'Capitaux Propres', 'Revenu'])) { // Adjust Type_Compte values as per your DB
                $accountNormalBalance = 'Credit';
            }

            if ($accountNormalBalance === 'Debit') {
                $initialBalance = $debitBefore - $creditBefore;
            } else { // Credit normal balance
                $initialBalance = $creditBefore - $debitBefore;
            }
            $runningBalance = $initialBalance;


            // 2. Fetch Transactions within the period
            $stmtTransactions = $pdo->prepare("
                SELECT
                    e.Date_Saisie,
                    e.Numero_Piece,
                    e.Description AS Ecriture_Description,
                    le.Montant,
                    le.Sens,
                    le.Libelle_Ligne,
                    jal.Nom_Journal
                FROM
                    Lignes_Ecritures le
                JOIN
                    Ecritures e ON le.ID_Ecriture = e.ID_Ecriture
                LEFT JOIN
                    JAL jal ON e.Cde = jal.Cde
                WHERE
                    le.ID_Compte = :id_compte
                    AND e.Date_Saisie BETWEEN :start_date AND :end_date
                ORDER BY
                    e.Date_Saisie ASC, e.ID_Ecriture ASC, le.Sens DESC;
            ");
            $stmtTransactions->bindParam(':id_compte', $selectedCompteId, PDO::PARAM_INT);
            $stmtTransactions->bindParam(':start_date', $startDate);
            $stmtTransactions->bindParam(':end_date', $endDate);
            $stmtTransactions->execute();
            $accountTransactions = $stmtTransactions->fetchAll(PDO::FETCH_ASSOC);

            // Calculate running balance
            foreach ($accountTransactions as &$transaction) {
                if ($accountNormalBalance === 'Debit') {
                    // For Debit normal balance accounts: Debit increases balance, Credit decreases
                    if ($transaction['Sens'] === 'D') {
                        $runningBalance += $transaction['Montant'];
                    } else {
                        $runningBalance -= $transaction['Montant'];
                    }
                } else { // Credit normal balance
                    // For Credit normal balance accounts: Credit increases balance, Debit decreases
                    if ($transaction['Sens'] === 'C') {
                        $runningBalance += $transaction['Montant'];
                    } else {
                        $runningBalance -= $transaction['Montant'];
                    }
                }
                $transaction['running_balance'] = $runningBalance;
            }
            unset($transaction); // Break the reference

            logUserActivity("Génération du Grand Livre pour le compte ID: " . $selectedCompteId . " par l'utilisateur ID: " . $_SESSION['user_id'] . " pour la période du {$startDate} au {$endDate}.");

        } catch (PDOException $e) {
            logApplicationError("Erreur PDO lors de la génération du Grand Livre: " . $e->getMessage());
            $message = "Erreur lors de la récupération des données pour le grand livre: " . $e->getMessage();
            $messageType = 'danger';
        }
    }
}
?>

<?php if (isset($_POST['generate_report']) && empty($message)): ?>
    <div class="panel panel-info">
        <div class="panel-footer text-right">
            <a href="../exports/export_reports.php?report_type=ledger_accounts&id_compte=<?= urlencode($selectedCompteId) ?>&start_date=<?= urlencode($startDate) ?>&end_date=<?= urlencode($endDate) ?>" class="btn btn-success">
                <span class="glyphicon glyphicon-download-alt"></span> Exporter en CSV
            </a>
        </div>
    </div>
<?php endif; ?>

<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>BailCompta 360 | <?= htmlspecialchars($titre) ?></title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="../../css/style.css">
    <link rel="stylesheet" href="../../css/tableau.css">
    <style>
        .ledger-table th, .ledger-table td { vertical-align: middle; font-size: 0.9em; }
        .balance-initial, .balance-final { font-weight: bold; background-color: #f0f8ff; }
        .balance-positive { color: #28a745; } /* Green */
        .balance-negative { color: #dc3545; } /* Red */
    </style>
</head>
<body>
    <div class="container">
        <h2 class="page-header"><?= htmlspecialchars($titre) ?></h2>

        <?php if ($message): ?>
            <div class="alert alert-<?= $messageType ?> alert-dismissible" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <?= $message ?>
            </div>
        <?php endif; ?>

        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Sélectionner le Compte et la Période</h3>
            </div>
            <div class="panel-body">
                <form action="" method="POST" class="form-inline">
                    <div class="form-group mr-2">
                        <label for="id_compte">Compte Comptable :</label>
                        <select name="id_compte" id="id_compte" class="form-control" required>
                            <option value="">-- Sélectionner un compte --</option>
                            <?php foreach ($comptes as $compte): ?>
                                <option value="<?= htmlspecialchars($compte['ID_Compte']) ?>"
                                    <?= ($selectedCompteId == $compte['ID_Compte']) ? 'selected' : '' ?>>
                                    <?= htmlspecialchars($compte['Numero_Compte']) ?> - <?= htmlspecialchars($compte['Nom_Compte']) ?> (<?= htmlspecialchars($compte['Type_Compte']) ?>)
                                </option>
                            <?php endforeach; ?>
                        </select>
                    </div>
                    <div class="form-group mr-2">
                        <label for="start_date">Date de Début :</label>
                        <input type="date" class="form-control" id="start_date" name="start_date" value="<?= htmlspecialchars($startDate) ?>" required>
                    </div>
                    <div class="form-group mr-2">
                        <label for="end_date">Date de Fin :</label>
                        <input type="date" class="form-control" id="end_date" name="end_date" value="<?= htmlspecialchars($endDate) ?>" required>
                    </div>
                    <button type="submit" name="generate_report" class="btn btn-primary">
                        <span class="glyphicon glyphicon-book"></span> Afficher le Grand Livre
                    </button>
                </form>
            </div>
        </div>

        <?php if (isset($_POST['generate_report']) && empty($message)): ?>
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">Détail du Compte : <?= htmlspecialchars($selectedAccountDetails['Numero_Compte'] ?? '') ?> - <?= htmlspecialchars($selectedAccountDetails['Nom_Compte'] ?? '') ?></h3>
                    <p class="text-muted small">Type de Compte : <?= htmlspecialchars($selectedAccountDetails['Type_Compte'] ?? 'N/A') ?></p>
                    <p class="text-muted small">Période du <?= htmlspecialchars(date('d/m/Y', strtotime($startDate))) ?> au <?= htmlspecialchars(date('d/m/Y', strtotime($endDate))) ?></p>
                </div>
                <div class="panel-body">
                    <?php if (empty($accountTransactions) && $initialBalance == 0): ?>
                        <div class="alert alert-info">Aucune transaction trouvée pour ce compte dans la période sélectionnée.</div>
                    <?php else: ?>
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped ledger-table">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>N° Pièce</th>
                                        <th>Journal</th>
                                        <th>Libellé Transaction</th>
                                        <th class="text-right">Débit</th>
                                        <th class="text-right">Crédit</th>
                                        <th class="text-right">Solde</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="balance-initial">
                                        <td colspan="6">Solde Initial au <?= htmlspecialchars(date('d/m/Y', strtotime($startDate . ' - 1 day'))) ?></td>
                                        <td class="text-right <?= $initialBalance >= 0 ? 'balance-positive' : 'balance-negative' ?>">
                                            <?= htmlspecialchars(number_format($initialBalance, 2, ',', ' ')) ?>
                                        </td>
                                    </tr>
                                    <?php foreach ($accountTransactions as $transaction): ?>
                                        <tr>
                                            <td><?= htmlspecialchars(date('d/m/Y', strtotime($transaction['Date_Saisie']))) ?></td>
                                            <td><?= htmlspecialchars($transaction['Numero_Piece'] ?? 'N/A') ?></td>
                                            <td><?= htmlspecialchars($transaction['Nom_Journal'] ?? 'N/A') ?></td>
                                            <td>
                                                <strong><?= htmlspecialchars($transaction['Ecriture_Description']) ?></strong><br>
                                                <small><?= htmlspecialchars($transaction['Libelle_Ligne']) ?></small>
                                            </td>
                                            <td class="text-right <?= $transaction['Sens'] === 'D' ? 'balance-positive' : '' ?>">
                                                <?= $transaction['Sens'] === 'D' ? htmlspecialchars(number_format($transaction['Montant'], 2, ',', ' ')) : '' ?>
                                            </td>
                                            <td class="text-right <?= $transaction['Sens'] === 'C' ? 'balance-negative' : '' ?>">
                                                <?= $transaction['Sens'] === 'C' ? htmlspecialchars(number_format($transaction['Montant'], 2, ',', ' ')) : '' ?>
                                            </td>
                                            <td class="text-right <?= $transaction['running_balance'] >= 0 ? 'balance-positive' : 'balance-negative' ?>">
                                                <?= htmlspecialchars(number_format($transaction['running_balance'], 2, ',', ' ')) ?>
                                            </td>
                                        </tr>
                                    <?php endforeach; ?>
                                    <tr class="balance-final">
                                        <td colspan="6">Solde Final au <?= htmlspecialchars(date('d/m/Y', strtotime($endDate))) ?></td>
                                        <td class="text-right <?= $runningBalance >= 0 ? 'balance-positive' : 'balance-negative' ?>">
                                            <?= htmlspecialchars(number_format($runningBalance, 2, ',', ' ')) ?>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    <?php endif; ?>
                </div>
            </div>
        <?php elseif (isset($_POST['generate_report']) && !empty($message)): ?>
            <?php else: ?>
            <div class="alert alert-info">Sélectionnez un compte et une période, puis cliquez sur "Afficher le Grand Livre" pour générer le rapport.</div>
        <?php endif; ?>

    </div>
    <?php require_once '../../templates/footer.php'; ?>
</body>
</html>